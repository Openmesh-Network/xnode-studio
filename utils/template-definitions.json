[
  {
    "id": "0",
    "logo": "https://bookface-images.s3.amazonaws.com/logos/ee60f430e8cb6ae769306860a9c03b2672e0eaf2.png",
    "name": "Ollama + Open-webui",
    "category": "AI",
    "tags": ["AI", "LLM"],
    "dateAdded": "2024-06-08T12:00:00Z",
    "desc": "With this template, you can easily deploy Ollama + Open WebUI, an advanced AI platform with a web-based user interface. This setup allows you to access and interact with powerful AI capabilities directly from your web browser, effortlessly manage and configure AI tools without needing deep technical knowledge, and utilize comprehensive documentation and guides available at ollama.ai/docs to get the most out of the platform. This template streamlines the process, making it simple for you to leverage cutting-edge AI technology for your projects.",
    "support": "• Community Resources: Connect with other users via the Syncthing Forum for troubleshooting and advice.\n• Documentation: Access detailed setup guides and best practices in the official Syncthing documentation.\n• Development & Issues: Report bugs or contribute through the GitHub repository.\n• Help & Troubleshooting: Explore advanced settings, including relay services and file versioning, through the documentation.\nThis template highlights Syncthing's focus on data privacy, direct synchronization, and ease of deployment through Xnode. It's an ideal solution for users and organizations looking to retain full control over their data without relying on external cloud services.",

    "serviceNames": ["ollama", "open-webui"],
    "quality": true,
    "implemented": true,
    "isUnitRunnable": true
  },
  {
    "id": "1",
    "logo": "https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png",
    "name": "Ethereum Node",
    "category": "Blockchain",
    "tags": ["Blockchain", "Ethereum"],
    "dateAdded": "2024-10-22T12:00:00Z",
    "desc": "Deploy an Ethereum Node to facilitate interaction with the Ethereum blockchain. Running a node allows you to verify transactions, create smart contracts, and interact with decentralized applications (dApps) directly on the network.",
    "longDesc": "An Ethereum node is a computer that participates in the Ethereum network by maintaining a copy of the blockchain, validating transactions, and relaying information. There are different types of nodes, including full nodes, light nodes, and archive nodes, each serving different functions within the network.\n\n**Key Features:**\n- **One-Click Deployment:** Set up your Ethereum node quickly using tools like Docker or cloud services with pre-configured images.\n- **Scalability:** Easily scale your operations by adding additional nodes as needed, accommodating growing transaction loads or application demands.\n- **Privacy:** By running your own node, you maintain greater control over your data and transactions, reducing reliance on third-party services.\n- **API Compatibility:** Access Ethereum's JSON-RPC API to interact programmatically with the network, enabling the development of dApps and other blockchain services.\n- **Real-Time Data:** Get immediate access to blockchain data, allowing for fast transaction confirmations and interactions with smart contracts.",
    "useCases": "- **Developers:** Create and test decentralized applications (dApps) by interacting directly with the Ethereum network without intermediary services.\n- **Businesses:** Use a node for applications requiring high reliability and control over data, such as financial services or supply chain management.\n- **Researchers:** Analyze blockchain data for studies on network performance, user behavior, or transaction patterns.",
    "support": "- **Community Forums:** Engage with the Ethereum community for support and discussions via the [Ethereum Stack Exchange](https://ethereum.org/en/developers/docs/nodes-and-clients/run-a-node/) or [Ethereum Community Forum](https://forum.ethereum.org/).\n- **Documentation:** Comprehensive guides and user manuals are available at the [Ethereum Developer Documentation](https://ethereum.org/en/developers/docs/nodes-and-clients/run-a-node/) for detailed reference on setup and best practices.\n- **Troubleshooting Help:** Access the issues section on the [Ethereum GitHub Repository](https://github.com/ethereum/go-ethereum/issues) to report bugs and find community-contributed solutions.\n\nThis template provides a structured overview of the functionalities and applications of an Ethereum node, emphasizing its importance in the blockchain ecosystem. For more detailed information, visit the [official Ethereum documentation](https://ethereum.org/en/developers/docs/nodes-and-clients/run-a-node/).",
    "serviceNames": ["geth", "lighthouse"],
    "quality": true,
    "implemented": true,
    "isUnitRunnable": true
  },
  {
    "id": "2",
    "logo": "https://s2.coinmarketcap.com/static/img/coins/64x64/28321.png",
    "name": "Polygon Node",
    "category": "Blockchain",
    "tags": ["Blockchain", "Polygon"],
    "dateAdded": "2024-10-22T12:00:00Z",
    "desc": "Deploy a Polygon Node to interact with the Polygon blockchain, allowing users to participate in network operations, validate transactions, and access data efficiently. Running a node enhances decentralization and provides direct access to the Polygon ecosystem.",
    "longDesc": "A Polygon node is a server that participates in the Polygon network by maintaining a copy of the blockchain, validating transactions, and facilitating communication between users and decentralized applications (dApps) on the network. Nodes can be full nodes, which store the entire blockchain, or light nodes, which store only the essential data.\n\n**Key Features:**\n- **One-Click Deployment:** Easily set up your Polygon node using pre-configured images and tools like Docker for fast deployment.\n- **Scalability:** Supports the rapid growth of applications on the Polygon network, accommodating high transaction volumes as needed.\n- **Privacy:** Running your own node enhances data privacy by reducing reliance on third-party RPC providers for blockchain interactions.\n- **API Compatibility:** Access Polygon's RPC APIs to integrate with dApps, enabling seamless transactions and smart contract interactions.\n- **Low Transaction Costs:** Benefit from lower fees on the Polygon network compared to other chains, making it cost-effective for users and developers.",
    "useCases": "- **Developers:** Build and test dApps on the Polygon network, utilizing the node for real-time interactions and smart contract deployments.\n- **Validators:** Participate in the network as a validator to secure transactions and earn rewards for validating blocks.\n- **Businesses:** Leverage the scalability and cost-effectiveness of Polygon for enterprise solutions, such as supply chain management or tokenization of assets.",
    "support": "- **Community Forums:** Engage with the Polygon community for support and discussions through the [Polygon Community Forum](https://forum.polygon.technology/).\n- **Documentation:** Comprehensive guides and resources are available at the [Polygon Developer Documentation](https://docs.polygon.technology/pos/get-started/becoming-a-validator/) and the [Moralis Polygon Node Guide](https://developers.moralis.com/polygon-node-guide-how-to-run-a-polygon-rpc-node/) for detailed setup and best practices.\n- **Troubleshooting Help:** Access the issues section on the [Polygon GitHub Repository](https://github.com/maticnetwork/matic-network/issues) to report problems and find community-contributed solutions.\n\nThis template provides an overview of Polygon node functionalities and applications, emphasizing its significance in the Polygon ecosystem. For more detailed information, visit the [official Polygon documentation](https://docs.polygon.technology/pos/get-started/becoming-a-validator/).",
    "serviceNames": ["heimdall", "bor"],
    "quality": true,
    "implemented": true,
    "isUnitRunnable": true
  },
  {
    "id": "3",
    "logo": "https://cryptologos.cc/logos/near-protocol-near-logo.png",
    "name": "Near Node",
    "category": "Blockchain",
    "tags": ["Blockchain", "Near"],
    "dateAdded": "2024-03-14T12:00:00Z",
    "desc": "Deploy a Near Protocol node to participate in the Near network, enabling transaction validation, smart contract deployment, and direct interaction with the Near blockchain ecosystem.",
    "longDesc": "A Near Protocol node is an essential component of the Near network that helps maintain the blockchain's decentralization and security. By running a node, you can participate in transaction validation, block production, and network consensus.\n\n**Key Features:**\n- **High Performance:** Leverage Near's unique sharding technology for fast transaction processing\n- **Validator Support:** Option to become a network validator and earn rewards\n- **Developer Tools:** Built-in support for smart contract deployment and testing\n- **Network Security:** Contribute to network security and decentralization\n- **API Access:** Direct access to Near Protocol's RPC endpoints\n\n**Hardware Requirements (Minimal):**\n- CPU: x86_64 (Intel, AMD) processor with at least 8 physical cores\n- RAM: 24GB DDR4\n- Storage: 1TB NVMe SSD",
    "useCases": "- **Validators:** Run a validator node to participate in network consensus and earn rewards\n- **Developers:** Access the Near network directly for dApp development and testing\n- **Network Contributors:** Support the Near ecosystem by running a full node",
    "support": "- **Community Forums:** Connect with the Near community through [Near Protocol Forum](https://gov.near.org/) and [Near Protocol Discord](https://near.chat/)\n- **Documentation:** Access comprehensive guides at [Near Protocol Documentation](https://docs.near.org/)\n- **Technical Support:** Find help through the [GitHub Repository](https://github.com/near/nearcore) and [Node Operation Guide](https://docs.near.org/validator/running-a-node)\n\nThis template provides everything needed to run a Near Protocol node, emphasizing its role in the Near ecosystem. For more information, visit the [official Near Protocol documentation](https://docs.near.org/).",
    "serviceNames": ["near"],
    "quality": true,
    "implemented": true,
    "isUnitRunnable": true
  }
]
